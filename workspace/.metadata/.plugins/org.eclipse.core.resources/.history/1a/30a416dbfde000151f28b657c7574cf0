package main.java;

import java.io.*;
import java.util.Properties;

public class PhoneDirectory {
	
	private Properties prop = new Properties();
	
	public PhoneDirectory()
	{
		InputStream prop_input = null;
		
		try
		{
			prop_input = new FileInputStream("src/main/resources/phone.properties");
			prop.load(prop_input);
		} catch (IOException err) {
			// TODO Auto-generated catch block
			err.printStackTrace();
		} finally {
			if (prop_input != null) {
				try
				{
					prop_input.close();
				} catch (IOException err)
				{
					err.printStackTrace();
				}
			}
		}
	}
	
	public void addEntry(String name, String number)
	{
		System.out.println(name + " " + number);
		try
		{
			Writer writer = new FileWriter(prop.getProperty("path"), true);
			writer.write((name + " " + number) + System.lineSeparator());
			writer.close();
		} catch (IOException err) {
			err.printStackTrace();
		}
		
	}
	
	public void deleteEntry(String name)
	{
		String num_loops_str = (readDirectory(name))[2]; //number of loops it took to find the name in the file
		
		int num_loops = Integer.parseInt(num_loops_str);
		int i = 0; //track what line we're reading
		
		Writer writer = null;
		try {
			writer = new FileWriter(prop.getProperty("path"));
		} catch (IOException e) {
			e.printStackTrace();
		} //Open directory for writing from beginning
		
		try ( BufferedReader directory = new BufferedReader(new FileReader(prop.getProperty("path"))))
		{
			while ( directory.readLine() != null)
			{
				if( i == num_loops)
				{
					writer.write("");
				}	
			}
			writer.close();
		} catch (IOException err)
		{
			err.printStackTrace();
		}
	}
	
	public String getNumber(String name) {
		return (readDirectory(name))[1];
	}
	
	public void changeEntry(String name, String number)
	{
		
	}
	
	public String[] readDirectory(String name)
	{
		String line;
		int i = 0;
		String[] finalArr = new String[3]; //0 = first + last name, 1 = number, 2 = number of loops until name
		
		try ( BufferedReader directory = new BufferedReader(new FileReader(prop.getProperty("path"))))
		{			
			while ((line = directory.readLine()) != null) {
				String[] lineArr = new String[3]; 
				i++;
		        lineArr = line.split(" ");
		        String catname = (lineArr[0] + " " + lineArr[1]);
		        if (name.contains(catname))
		        {
		        	finalArr[0] = catname;
		        	finalArr[1] = lineArr[2];
		        	finalArr[2] = Integer.toString(i);
		        	break;
		        }
		    }
		} catch (IOException err)
		{
			err.printStackTrace();
		}
		return finalArr;
	}

}
